{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\simbo\\\\Documents\\\\Dosyalar\\\\Programlama Dosyalar\\u0131\\\\React\\\\24-nextjs-project\\\\pages\\\\index.js\";\n// import { useEffect, useState } from 'react';\nimport { MongoClient } from 'mongodb';\nimport Head from 'next/head';\nimport MeetupList from '../components/meetups/MeetupList';\nimport { Fragment } from 'react'; // const DUMMY_MEETUPS = [\n//   {\n//     id: 'm1',\n//     title: 'A first meetup',\n//     image:\n//       'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n//     address: 'address 5 istanbul',\n//     description: 'first meetup',\n//   },\n//   {\n//     id: 'm2',\n//     title: 'second meetup',\n//     image:\n//       'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n//     address: 'address 5 istanbul',\n//     description: 'first meetup',\n//   },\n//   {\n//     id: 'm3',\n//     title: 'third meetup',\n//     image:\n//       'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n//     address: 'address 5 istanbul',\n//     description: 'first meetup',\n//   },\n// ];\n\nconst HomePage = function (props) {\n  //   const [loadedMeetups, setLoadedMeetups] = useState([]);\n  //   useEffect(() => {\n  //     setLoadedMeetups(DUMMY_MEETUPS);\n  //   }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}; // //this funtion talks with server and client never sees this. if our site wont be watch very frequently this is the way to go.\n\n\nexport async function getStaticProps() {\n  //fetch data\n  const client = await MongoClient.connect('mongodb+srv://user:Tcsg-134USER@cluster0.rwrjf.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      //since mongdb item id is a bit different we had to refoctor it in a map method\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10 //we can change this in seconds. 3600 is an hour.\n    //10 seconds to wait to renegerate incaming request, to update pre-rendered page with never data. it will run every 10secons if there is a request so data is never older than 10 seconds.\n\n  };\n} //if site updates are very frequent we might want to choose this approach. Since its updated auto by every request we dont need to revalidate by ourselves.\n//this function does not run during build process (unlike getStaticProps), but during deployment on server.\n//code here run on server and wont be exposed to client as getStaticProps.\n// export async function getServerSideProps(context) {\n//     //context parameter gives us extra data as server side props.\n//     const req = context.req; //request\n//     const res = context.res; //respond\n//     //fetch data\n//     return {\n//       props: {\n//         meetups: DUMMY_MEETUPS,\n//       },\n//     };\n//   }\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/simbo/Documents/Dosyalar/Programlama DosyalarÄ±/React/24-nextjs-project/pages/index.js"],"names":["MongoClient","Head","MeetupList","Fragment","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA;AACA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,UAAUC,KAAV,EAAiB;AAChC;AAEA;AACA;AACA;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAfD,C,CAiBA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,gGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACL;AACAC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC9BC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADgB;AAE9BC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFc;AAG9BC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHgB;AAI9BC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ0B,OAAL,CAAlB;AAFJ,KADF;AAULC,IAAAA,UAAU,EAAE,EAVP,CAUW;AAChB;;AAXK,GAAP;AAaD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAepB,QAAf","sourcesContent":["// import { useEffect, useState } from 'react';\r\nimport { MongoClient } from 'mongodb';\r\nimport Head from 'next/head';\r\nimport MeetupList from '../components/meetups/MeetupList';\r\nimport { Fragment } from 'react';\r\n\r\n// const DUMMY_MEETUPS = [\r\n//   {\r\n//     id: 'm1',\r\n//     title: 'A first meetup',\r\n//     image:\r\n//       'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n//     address: 'address 5 istanbul',\r\n//     description: 'first meetup',\r\n//   },\r\n//   {\r\n//     id: 'm2',\r\n//     title: 'second meetup',\r\n//     image:\r\n//       'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n//     address: 'address 5 istanbul',\r\n//     description: 'first meetup',\r\n//   },\r\n//   {\r\n//     id: 'm3',\r\n//     title: 'third meetup',\r\n//     image:\r\n//       'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n//     address: 'address 5 istanbul',\r\n//     description: 'first meetup',\r\n//   },\r\n// ];\r\n\r\nconst HomePage = function (props) {\r\n  //   const [loadedMeetups, setLoadedMeetups] = useState([]);\r\n\r\n  //   useEffect(() => {\r\n  //     setLoadedMeetups(DUMMY_MEETUPS);\r\n  //   }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>React Meetups</title>\r\n      </Head>\r\n      <MeetupList meetups={props.meetups} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n// //this funtion talks with server and client never sees this. if our site wont be watch very frequently this is the way to go.\r\nexport async function getStaticProps() {\r\n  //fetch data\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://user:Tcsg-134USER@cluster0.rwrjf.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      //since mongdb item id is a bit different we had to refoctor it in a map method\r\n      meetups: meetups.map(meetup => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 10, //we can change this in seconds. 3600 is an hour.\r\n    //10 seconds to wait to renegerate incaming request, to update pre-rendered page with never data. it will run every 10secons if there is a request so data is never older than 10 seconds.\r\n  };\r\n}\r\n\r\n//if site updates are very frequent we might want to choose this approach. Since its updated auto by every request we dont need to revalidate by ourselves.\r\n//this function does not run during build process (unlike getStaticProps), but during deployment on server.\r\n//code here run on server and wont be exposed to client as getStaticProps.\r\n// export async function getServerSideProps(context) {\r\n//     //context parameter gives us extra data as server side props.\r\n//     const req = context.req; //request\r\n//     const res = context.res; //respond\r\n//     //fetch data\r\n//     return {\r\n//       props: {\r\n//         meetups: DUMMY_MEETUPS,\r\n//       },\r\n//     };\r\n//   }\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}