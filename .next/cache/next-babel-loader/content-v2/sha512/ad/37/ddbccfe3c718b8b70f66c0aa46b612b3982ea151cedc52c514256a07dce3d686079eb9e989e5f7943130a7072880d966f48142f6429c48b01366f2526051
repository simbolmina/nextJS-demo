{"ast":null,"code":"//api routes are about returning components. this is server side code and this code will never exposed to client.\n//we simply create our own API\nimport { MongoClient } from 'mongodb';\n\nasync function handler(req, res) {\n  // req - request res- response\n  //req contains header, request body, method\n  if (req.method === 'POST') {\n    //only POST will trigger this request\n    const data = req.body; // data of incoming request\n    // const { title, image, address, description } = data;\n\n    const client = MongoClient.connect('mongodb+srv://user:Tcsg-134USER@cluster0.rwrjf.mongodb.net/meetups?retryWrites=true&w=majority'); //this code should not end up on client side.\n\n    const db = client.db(); //db() method to get hold of database.\n    //collection are full of documents. single meetup will be single meetup. whole collection will be meetups.\n\n    const meetupsCollection = db.collection('meetups'); //name will generate on the fly.\n\n    console.log(meetupsCollection); //we insert data to database with inserOne()\n\n    const result = await meetupsCollection.insertOne(data); //build in query method to add one single document to collection.\n    //inserted data is an object. since data const is an object we dont need to add it as an object unlike this insertOne({title, address etc})\n\n    console.log(result); //close the db connection once we are done.\n\n    client.close(); //res object is to sendback the response. status sets a http response. json is to prepare json data for response.\n\n    res.status(201).json({\n      message: 'Meetup inserted!'\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["C:/Users/simbo/Documents/Dosyalar/Programlama DosyalarÄ±/React/24-nextjs-project/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","client","connect","db","meetupsCollection","collection","console","log","result","insertOne","close","status","json","message"],"mappings":"AAAA;AACA;AAEA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B;AACA;AACA,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB;AACA,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB,CAFyB,CAEF;AAEvB;;AAEA,UAAMC,MAAM,GAAGP,WAAW,CAACQ,OAAZ,CACb,gGADa,CAAf,CANyB,CASzB;;AAEA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CAXyB,CAYzB;AAEA;;AACA,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAfyB,CAe2B;;AAEpDC,IAAAA,OAAO,CAACC,GAAR,CAAYH,iBAAZ,EAjByB,CAmBzB;;AACA,UAAMI,MAAM,GAAG,MAAMJ,iBAAiB,CAACK,SAAlB,CAA4BV,IAA5B,CAArB,CApByB,CAqBzB;AACA;;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ,EAvByB,CAyBzB;;AACAP,IAAAA,MAAM,CAACS,KAAP,GA1ByB,CA4BzB;;AACAb,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD;AACF;;AAED,eAAelB,OAAf","sourcesContent":["//api routes are about returning components. this is server side code and this code will never exposed to client.\r\n//we simply create our own API\r\n\r\nimport { MongoClient } from 'mongodb';\r\n\r\nasync function handler(req, res) {\r\n  // req - request res- response\r\n  //req contains header, request body, method\r\n  if (req.method === 'POST') {\r\n    //only POST will trigger this request\r\n    const data = req.body; // data of incoming request\r\n\r\n    // const { title, image, address, description } = data;\r\n\r\n    const client = MongoClient.connect(\r\n      'mongodb+srv://user:Tcsg-134USER@cluster0.rwrjf.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n    //this code should not end up on client side.\r\n\r\n    const db = client.db();\r\n    //db() method to get hold of database.\r\n\r\n    //collection are full of documents. single meetup will be single meetup. whole collection will be meetups.\r\n    const meetupsCollection = db.collection('meetups'); //name will generate on the fly.\r\n\r\n    console.log(meetupsCollection);\r\n\r\n    //we insert data to database with inserOne()\r\n    const result = await meetupsCollection.insertOne(data);\r\n    //build in query method to add one single document to collection.\r\n    //inserted data is an object. since data const is an object we dont need to add it as an object unlike this insertOne({title, address etc})\r\n    console.log(result);\r\n\r\n    //close the db connection once we are done.\r\n    client.close();\r\n\r\n    //res object is to sendback the response. status sets a http response. json is to prepare json data for response.\r\n    res.status(201).json({ message: 'Meetup inserted!' });\r\n  }\r\n}\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}