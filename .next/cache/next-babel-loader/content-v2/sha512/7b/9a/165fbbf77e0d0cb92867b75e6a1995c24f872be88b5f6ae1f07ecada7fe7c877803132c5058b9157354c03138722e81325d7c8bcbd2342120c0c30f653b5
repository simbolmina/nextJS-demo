{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\simbo\\\\Documents\\\\Dosyalar\\\\Programlama Dosyalar\\u0131\\\\React\\\\24-nextjs-project\\\\pages\\\\[meetupId].js\";\nimport MeetupDetail from '../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://pixabay.com/get/g28337475addcc6b038d6a40f8c08f9376c39c86f3c393190c1bec235175a7f45685bb9c52121b3ceb4bac3d88b7a824499b5e8edee7f0834a7dd541a1a4b0166_1280.jpg\",\n    title: \"first meetup\",\n    address: \"street 5 berlin\",\n    description: \"first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}; //we need to add this function if this component is a dynmic page while using getStaticProps() not serverSideProps or nothing.\n//since pages are are pre-rendered during build process, nextJS renders all possible pages in app, including dynmaic pages. nextJS neeeds which ids it will pregenerate\n\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/simbo/Documents/Dosyalar/Programlama DosyalarÄ±/React/24-nextjs-project/pages/[meetupId].js"],"names":["MeetupDetail","MeetupDetails"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,oCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAY;AAChC,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,oKADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,iBAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD,C,CAWA;AAEA;;;KAbMA,a;;AA0DN,eAAeA,aAAf","sourcesContent":["import MeetupDetail from '../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = function () {\r\n  return (\r\n    <MeetupDetail\r\n      image=\"https://pixabay.com/get/g28337475addcc6b038d6a40f8c08f9376c39c86f3c393190c1bec235175a7f45685bb9c52121b3ceb4bac3d88b7a824499b5e8edee7f0834a7dd541a1a4b0166_1280.jpg\"\r\n      title=\"first meetup\"\r\n      address=\"street 5 berlin\"\r\n      description=\"first meetup\"\r\n    />\r\n  );\r\n};\r\n\r\n//we need to add this function if this component is a dynmic page while using getStaticProps() not serverSideProps or nothing.\r\n\r\n//since pages are are pre-rendered during build process, nextJS renders all possible pages in app, including dynmaic pages. nextJS neeeds which ids it will pregenerate\r\nexport async function getStaticPaths() {\r\n  return {\r\n    fallback: false,\r\n    //fallback key tells nextJS if our pathc contains all possible pages or some of them. false means contains all. if user type unsuported id (in site path) nextJS gives a 404 error.\r\n    //true means nextJS will try to create a page. we can use this option for most visited pages but not all of them.\r\n    paths: [\r\n      //this function returns a object including an array of paths of every dynamic pages.\r\n      {\r\n        params: {\r\n          //if we have multiple dynamic pages we need multiple keys for each dynmic page\r\n          meetupId: 'm1',\r\n          //\r\n        },\r\n      },\r\n      //for each possible dymic page we need to create an object. not hardcoded ofc.\r\n      {\r\n        params: {\r\n          meetupId: 'm2',\r\n        },\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  //fetch data for a single meetup\r\n  const meetupId = context.params.meetupId;\r\n\r\n  console.log(meetupId);\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        image:\r\n          'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n        id: meetupId,\r\n        title: 'First Meetup',\r\n        address: 'Some Street 5, Some City',\r\n        description: 'This is a first meetup',\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}